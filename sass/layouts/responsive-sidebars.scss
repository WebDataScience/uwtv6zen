/**
 * @file
 * Positioning for responsive layout .
 *
 * Define CSS classes to create a table-free, 3-column, 2-column, or single
 * column layout depending on whether blocks are enabled in the left or right
 * columns.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */

@import "base";
/* COLORS */
@import "_colors";
// We are going to create a 980px wide, 5 column grid with 20px gutters between
// columns (applied as 10px of left/right padding on each column).
$zen-column-count:  24;
$zen-gutter-width:  10px;


// IE6-7 don't support box-sizing: border-box. We can fix this in 1 of 3 ways:
// - Drop support for IE 6/7. :-) In the _base.scss, set $legacy-support-for-ie6
//   and $legacy-support-for-ie7 to false.
// - (Preferred) Install the box-sizing polyfill and set the variable below to
//   the absolute path URL to the boxsizing.htc file.
//   @see https://github.com/Schepp/box-sizing-polyfill
//   $box-sizing-polyfill-path: "/path/to/boxsizing.htc";
// - Use the same CSS unit for grid width and gutter width (use px for both or
//   use % for both, etc.) and set the box-sizing variable to content-box.
//   $zen-box-sizing: content-box;


// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
$zen-auto-include-item-base: false;
// $zen-auto-include-flow-item-base: false;


/*
 * Center the page.
 */

#page,
.region-bottom {
  /* For screen sizes larger than 1200px, prevent excessively long lines of text
     by setting a max-width. */
  margin-left: auto;
  margin-right: auto;
  max-width: 1200px;
}

/*
 * Apply the shared properties of grid items in a single, efficient ruleset.
 */
// See the note about $zen-auto-include-item-base above.

#header,
#content, 
.region-sidebar-first,
.region-sidebar-second,
#footer {
  @include zen-grid-item-base();
}

/*
 * Containers for grid items and flow items.
 */

#header,
#main,
#footer {
  @include zen-grid-container();
}


@media all and (max-width: 479px) {
  #header{
    background-color:black;
  }
  .breadcrumb,
  #site_home_link{
    display:none;
  }
  #header,
  #navigation{
    padding-left:0;
    padding-right:0;
    #patch {
      @include zen-grid-item(4,1);
    }
    #logo_text{
      @include zen-grid-item(18,5);
      padding-top:5px;
      
    }
    #main-menu{
      display:none;
    }
    // Hide the desktop site header graphics
    .graphics-uwt_logo_patch,
    .graphics-uwt_logo_text{
      display:none;
    }

  }
}



@media all and (min-width: 480px) {
  $header-height: 250px;
  #header{
    height:$header-height;
    /*overflow:hidden;*/
  }
  #band{
    position:absolute;
    top:0;
    left:0;
    width:100%;
    background-color:black;
    height:35px;
    z-index: -1;
  }
  #global-menu{
    @include zen-grid-item(4,5);
    #main-menu .block{
      margin-bottom:0;
    }
    #main-menu a:link,
    #main-menu a:visited{
      color:white;
      background-color:black;
      text-decoration: none;
      font-weight: lighter;
      font-size:12px;
    }
    #main-menu a:after{
      content: " |";
    }
    ul li{
      padding-right:0;
    }
    #main-menu .last a:after{
      content:"";
    }
  }
  #global-search-container{
    @include zen-grid-item(4,9);
    input[type=text]{
      height:30px;
      margin-top:15px;
      border:2px solid $grey_dark;
      @include border-radius(5px);
    }
  }
  #home-links{
    @include zen-grid-container();
    @include zen-grid-item(8,1);
    #patch{
      @include zen-grid-item(1,1,left);
    }
    #logo_text{
      @include zen-grid-item(7,2,left);
    }
    #site_home_link{
      @include zen-grid-item(7,2,left);
    }

  }

  /*
   * The layout when there is only one sidebar, the left one.
   */
   #home-links {
    .graphics-uwt_logo_patch_mobile,
    .graphics-uwt_logo_text_white{
      display:none;
    }
   }


  .sidebar-first {
    #content { /* Span 2 columns, starting in 2nd column from left. */
      @include zen-grid-item(18, 7);
    }

    .region-sidebar-first { /* Span 1 column, starting in 1st column from left. */
      @include zen-grid-item(6, 1);
    }
  }

  /*
   * The layout when there is only one sidebar, the right one.
   */

  .sidebar-second {
    #content { /* Span 2 columns, starting in 1st column from left. */
      @include zen-grid-item(18, 1);
    }

    .region-sidebar-second { /* Span 1 column, starting in 3rd column from left. */
      @include zen-grid-item(6, 19);
    }
  }

  /*
   * The layout when there are two sidebars.
   */

  .two-sidebars {
    #content { /* Span 2 columns, starting in 2nd column from left. */
      @include zen-grid-item(12, 7);
    }

    .region-sidebar-first { /* Span 1 column, starting in 1st column from left. */
      @include zen-grid-item(6, 1);
    }

    .region-sidebar-second { /* Start a new row and span all 3 columns. */
      @include zen-grid-item(6, 19);
    }
  }
}